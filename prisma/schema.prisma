generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("UNCHAINED_POSTGRES")
}

model AssetPrice {
  id                  Int                   @id @default(autoincrement())
  dataSetId           Int
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  block               Int?
  price               Decimal
  signature           Bytes?                @db.ByteA
  oldSignature        String?
  dataset             DataSet               @relation(fields: [dataSetId], references: [id])
  signersOnAssetPrice SignersOnAssetPrice[]

  @@unique([dataSetId, block])
}

model DataSet {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  AssetPrice AssetPrice[]
}

model Signer {
  id                  Int                   @id @default(autoincrement())
  oldKey              String?               @unique
  key                 Bytes?                @unique @db.ByteA
  points              Int                   @default(0)
  name                String?
  signersOnAssetPrice SignersOnAssetPrice[]
  SprintPoint         SprintPoint[]
}

model SignersOnAssetPrice {
  assetPrice   AssetPrice @relation(fields: [assetPriceId], references: [id])
  signer       Signer     @relation(fields: [signerId], references: [id])
  signerId     Int
  assetPriceId Int

  @@id([signerId, assetPriceId])
}

model SprintPoint {
  signer   Signer @relation(fields: [signerId], references: [id])
  sprint   Int
  score    Int
  signerId Int

  @@id([signerId, sprint])
}
